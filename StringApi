// An highlighted block
1、equals   :   比较两个字符串是否相等 返回值是boolean
	String a = "abc";
	String b = "abc";
	if(a.equals(b)){
		System.out.println("a=b");
	}
	
2、equalsInogeCase:忽略字符串的大小写，两个字符串是否相等 返回值是boolean；
String a = "Abc";
	String b = "abc";
	if(a.equals(b)){
		System.out.println("a=b");//false
	}
	
3、startsWith：测试此字符串是否以指定的前缀开始；boolean
	public static void main(String[] args) {

		Scanner sc = new Scanner(System.in);
		String a = sc.nextLine();

		boolean flag = a.startsWith("旗木");

		if (flag) {
			System.out.println("姓旗木");
		}

		boolean flag2 = a.endsWith("卡卡西");

		if (flag2) {
			System.out.println("叫卡卡西");
		}

		for (int i = 0; i < a.length(); i++) {
			System.out.print(a.charAt(i));

		}

	}
}

4  endsWith：测试此字符串是否以指定的后缀结束。boolean
boolean flag2 = a.endsWith("卡卡西");

		if (flag2) {
			System.out.println("叫卡卡西");
		}
		
5  charAt ：返回指定索引处的 char 值。返回值char
  string a = “asjdhajkh”;
  char b=a.charAt(0);//'a'
  
6  length: 返回此字符串的长度 返回值int
    string a = “asjdhajkh”;//9
	a.length();
	
7  indexOf :返回指定字符在此字符串中第一次出现处的索引; int
   string a = “asjdhajkh”;
   a.indexOf(a);// 0
   
8  lastIndexOf:回指定字符在此字符串中最后一次出现处的索引。int
 string a = “abca”;
   a.indexOf(a);//3

9  Integer.parseInt()：将字符串参数作为有符号的十进制整数进行解析。
 String a = "845674857";

		  int b = Integer.parseInt(a);

		  System.out.println(b);
   Boolean.parseBoolean() ：将字符串参数作为有符号的boolean进行解析。
   String a = "false";

		  boolean b =Boolean.parseBoolean(a)；

		  System.out.println(b);
   Float .....

10 split ：根据给定正则表达式的匹配拆分此字符串。返回值是字符串数组
String a = {123,3435,565,7,78}
String[] arr=a.split(",")
arr[]= {{123}，{3435}，{565}，{7}，{78}}


11 subString（int a） ： 返回一个新的字符串，它是此字符串的一个子字符串。该子字符串从指定索引处的字符开始，直到此字符串末尾。返回值是string
String a = {12233467}；
String b= a.subString(1)
b="2233467";

12 contains ： 当且仅当此字符串包含指定的 char 值序列时，返回 true
string a = {2761892367}
String b = {2}
b.contains(a)// true

13 toCharArray：  将此字符串转换为一个新的字符数组。返回 char[]
String a ={12345}
a.toCharArray();
char a = {{1}{2}{3}{4}{5}}

14 trim  :返回字符串的副本，忽略前导空白和尾部空白。  返回 String
String a = "  236754 745 63 627  "  ;

15 format
    转换符	详细说明	示例
    %s	字符串类型	“喜欢请收藏”
    %c	字符类型	‘m’
    %b	布尔类型	true
    %d	整数类型（十进制）	88
    %x	整数类型（十六进制）	FF
    %o	整数类型（八进制）	77
    %f	浮点类型	8.888
    %a	十六进制浮点类型	FF.35AE
    %e	指数类型	9.38e+5
    %g	通用浮点类型（f和e类型中较短的）	不举例(基本用不到)
    %h	散列码	不举例(基本用不到)
    %%	百分比类型	％(%特殊字符%%才能显示%)
    %n	换行符	不举例(基本用不到)
    %tx	日期与时间类型（x代表不同的日期与时间转换符)	不举例(基本用不到)

为了方便理解还是举个例子
    String str=null;
    str=String.format("Hi,%s", "小超");
    System.out.println(str);
    str=String.format("Hi,%s %s %s", "小超","是个","大帅哥");
    System.out.println(str);
    System.out.printf("字母c的大写是：%c %n", 'C');
    System.out.printf("布尔结果是：%b %n", "小超".equal("帅哥"));
    System.out.printf("100的一半是：%d %n", 100/2);
    System.out.printf("100的16进制数是：%x %n", 100);
    System.out.printf("100的8进制数是：%o %n", 100);
    System.out.printf("50元的书打8.5折扣是：%f 元%n", 50*0.85);
    System.out.printf("上面价格的16进制数是：%a %n", 50*0.85);
    System.out.printf("上面价格的指数表示：%e %n", 50*0.85);
    System.out.printf("上面价格的指数和浮点数结果的长度较短的是：%g %n", 50*0.85);
    System.out.printf("上面的折扣是%d%% %n", 85);
    System.out.printf("字母A的散列码是：%h %n", 'A');

输出结果
    Hi,小超
    Hi,小超 是个 大帅哥
    字母c的大写是：C
    布尔的结果是：false
    100的一半是：50
    100的16进制数是：64
    100的8进制数是：144
    50元的书打8.5折扣是：42.500000 元
    上面价格的16进制数是：0x1.54p5
    上面价格的指数表示：4.250000e+01
    上面价格的指数和浮点数结果的长度较短的是：42.5000
    上面的折扣是85%
    字母A的散列码是：41

###搭配转换符还有实现高级功能 第一个例子中有用到 $
    标志	说明	示例	结果
    +	为正数或者负数添加符号	(“%+d”,15)	+15
    0	数字前面补0(加密常用)	(“%04d”, 99)	0099
    空格	在整数之前添加指定数量的空格	(“% 4d”, 99)	99
    ,	以“,”对数字分组(常用显示金额)	(“%,f”, 9999.99)	9,999.990000
    (	使用括号包含负数	(“%(f”, -99.99)	(99.990000)
    #	如果是浮点数则包含小数点，如果是16进制或8进制则添加0x或0	(“%#x”, 99)(“%#o”, 99)	0x63 0143
    <	格式化前一个转换符所描述的参数	(“%f和%<3.2f”, 99.45)	99.450000和99.45
    d,%2$s”, 99,”abc”)	99,abc

第一个例子中有说到 %tx x代表日期转换符 我也顺便列举下日期转换符
    标志	说明	示例
    c	包括全部日期和时间信息	星期六 十月 27 14:21:20 CST 2007
    F	“年-月-日”格式	2007-10-27
    D	“月/日/年”格式	10/27/07
    r	“HH:MM:SS PM”格式（12时制）	02:25:51 下午
    T	“HH:MM:SS”格式（24时制）	14:28:16
    R	“HH:MM”格式（24时制）	14:28

来个例子方便理解
Date date=new Date();
    //c的使用
    System.out.printf("全部日期和时间信息：%tc%n",date);
    //f的使用
    System.out.printf("年-月-日格式：%tF%n",date);
    //d的使用
    System.out.printf("月/日/年格式：%tD%n",date);
    //r的使用
    System.out.printf("HH:MM:SS PM格式（12时制）：%tr%n",date);
    //t的使用
    System.out.printf("HH:MM:SS格式（24时制）：%tT%n",date);
    //R的使用
    System.out.printf("HH:MM格式（24时制）：%tR",date);

输出结果
    全部日期和时间信息：星期三 九月 21 22:43:36 CST 2016
    年-月-日格式：2016-09-21
    月/日/年格式：16/10/21
    HH:MM:SS PM格式（12时制）：10:43:36 下午
    HH:MM:SS格式（24时制）：22:43:36
    HH:MM格式（24时制）：22:43

